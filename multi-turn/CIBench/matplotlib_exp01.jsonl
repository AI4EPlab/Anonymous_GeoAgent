{"prompt": "File Path: `data/matplotlib_dataset01.csv`\n\nLoad the dataset from the file path into a pandas DataFrame. Display the column names and the first 5 rows of the DataFrame.\n", "code": "import pandas as pd\n\npath = \"data/matplotlib_dataset01.csv\"\ndf = pd.read_csv(path)\nprint(df.columns)\nprint(df.head(5))\n", "library": ["pandas"], "exlib": ["pandas"]}
{"prompt": "\n\nCreate a line plot of acceleration, using figsize=(10,6), color='blue'.\n    \n", "code": "import matplotlib.pyplot as plt\n\nplt.figure(figsize=(10,6))\nplt.plot(df['acceleration'], color='blue')\nplt.title(\"Line plot of Acceleration\")\nplt.xlabel(\"Car Index\")\nplt.ylabel(\"Acceleration\")\nplt.show()\n", "library": ["matplotlib"], "exlib": ["matplotlib"]}
{"prompt": "\n\nCreate a histogram of the weight, using figsize=(10,6), bins=30, color='green', alpha=0.7. \n\n", "code": "plt.figure(figsize=(10,6))\nplt.hist(df['weight'], bins=30, color='green', alpha=0.7)\nplt.title(\"Histogram of Weight\")\nplt.xlabel(\"Weight\")\nplt.ylabel(\"Frequency\")\nplt.show()\n", "library": ["matplotlib"], "exlib": ["matplotlib"]}
{"prompt": "\n\nDraw a scatter graph of the relationship between mpg and displacement columns.\n\n", "code": "plt.scatter(df['mpg'], df['displacement'])\nplt.title('Relationship between mpg and displacement')\nplt.xlabel('mpg')\nplt.ylabel('displacement')\nplt.show()\n", "library": ["matplotlib"], "exlib": ["matplotlib"]}
{"prompt": "\n\nCreate a pie chart of the unique values of \"origin\", using figsize=(8,8).\n\n", "code": "pie_data = df['origin'].value_counts()\nplt.figure(figsize=(8,8))\nplt.pie(pie_data, labels=pie_data.index, autopct='%1.1f%%')\nplt.title(\"Pie chart of Origin\")\nplt.show()\n", "library": ["matplotlib"], "exlib": ["matplotlib"]}
{"prompt": "\n\nGroup by origin and visualize horsepower and weight content of each origin using a stacked bar chart.\n\n", "code": "\ngrouped_data = df.groupby('origin')[['horsepower', 'weight']].mean()\n\n# Creating a stacked bar chart\ngrouped_data.plot(kind='bar', stacked=True)\nplt.title('Horsepower and Weight Content by Origin')\nplt.xlabel('Origin')\nplt.ylabel('Average Content')\nplt.show()\n", "library": ["matplotlib"], "exlib": ["matplotlib"]}
{"prompt": "\n\nDraw a heatmap of the correlation between all the nemerical columns of the DataFrame. \n\n", "code": "# Select all the numerical columns\ndf = df.select_dtypes(include=['float64', 'int64'])\ncorr = df.corr()\nplt.imshow(corr, cmap='coolwarm', interpolation='nearest')\nplt.colorbar()\nplt.xticks(range(len(corr)), corr.columns, rotation=90)\nplt.yticks(range(len(corr)), corr.columns)\nplt.show()\n", "library": ["matplotlib"], "exlib": ["matplotlib"]}
