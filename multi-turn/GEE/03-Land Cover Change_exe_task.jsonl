{"code": "import ee\nee.Initialize()\nimport geemap\nMap = geemap.Map()\n", "task": "Import the Earth Engine and geemap libraries, initialize Earth Engine, and create a Map object named \"Map\" using the geemap library.", "exec_path": "GEE", "context": "", "functions": ["ee.Initialize", "geemap.Map"], "external_vars": ["geemap", "ee"], "defined_vars": ["Map"], "parameters": [], "libraries": ["import geemap", "import ee"]}
{"code": "geometry = ee.Geometry.MultiPolygon(\n        [[[[-5.094746847742044, 39.01027060503963],\n           [-5.424336691492044, 38.91844111682899],\n           [-5.308980246179544, 38.719426292717344],\n           [-4.839314718835794, 38.867135703533066]]],\n         [[[-5.308980246179544, 38.725854804847174],\n           [-5.144185324304544, 38.55852561752335],\n           [-4.814595480554544, 38.6829871347131],\n           [-4.858540793054544, 38.867135703533066]]]])\n", "task": "Define a variable named `geometry` using the `ee.Geometry.MultiPolygon()` method from the `ee` library with the provided coordinates.", "exec_path": "GEE", "context": "import geemap\nimport ee\n", "functions": ["ee.Geometry.MultiPolygon"], "external_vars": ["ee"], "defined_vars": ["geometry"], "parameters": ["[[[[-5.094746847742044, 39.01027060503963], [-5.424336691492044, 38.91844111682899], [-5.308980246179544, 38.719426292717344], [-4.839314718835794, 38.867135703533066]]], [[[-5.308980246179544, 38.725854804847174], [-5.144185324304544, 38.55852561752335], [-4.814595480554544, 38.6829871347131], [-4.858540793054544, 38.867135703533066]]]]"], "libraries": ["import geemap", "import ee"]}
{"code": "# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\"COPERNICUS/Landcover/100m/Proba-V-C3/Global\")\nprint(CGLSCollection,\"CGLS LC100 collection\")\n", "task": "Using the `ee` library, define a variable named `CGLSCollection` that represents the ImageCollection \"COPERNICUS/Landcover/100m/Proba-V-C3/Global\". Then, use the `print` function to display the `CGLSCollection` along with the label \"CGLS LC100 collection\".", "exec_path": "GEE", "context": "import geemap\nimport ee\n", "functions": ["ee.ImageCollection", "print"], "external_vars": ["print", "ee"], "defined_vars": ["CGLSCollection"], "parameters": ["COPERNICUS/Landcover/100m/Proba-V-C3/Global", "CGLSCollection", "CGLS LC100 collection"], "libraries": ["import geemap", "import ee"]}
{"code": "# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\nprint(imageList,\"imageList\")\n", "task": "Using the `CGLSCollection` object, create a list named `imageList` containing the first 5 elements of the collection. Then, print the `imageList` along with the label \"imageList\".", "exec_path": "GEE", "context": "import geemap\nimport ee\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n", "functions": ["CGLSCollection.toList", "print"], "external_vars": ["CGLSCollection", "print"], "defined_vars": ["imageList"], "parameters": [5, "imageList", "imageList"], "libraries": ["import geemap", "import ee"]}
{"code": "#/1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename \nimg_2015 = ee.Image(imageList.get(0)).select(['discrete_classification'],['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(['discrete_classification'],['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(['discrete_classification'],['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(['discrete_classification'],['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(['discrete_classification'],['discrete_2019'])\n", "task": "Using the Earth Engine library (ee) and the imageList variable, define five image variables: img_2015, img_2016, img_2017, img_2018, and img_2019. Each image variable should be created by selecting the band \"discrete_classification\" from the corresponding image in the imageList and renaming it to \"discrete_\" followed by the year. For example, img_2015 should be created from imageList.get(0) and renamed to \"discrete_2015\".", "exec_path": "GEE", "context": "import geemap\nimport ee\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n", "functions": ["unknown_function.select", "ee.Image", "imageList.get", "unknown_function.select", "ee.Image", "imageList.get", "unknown_function.select", "ee.Image", "imageList.get", "unknown_function.select", "ee.Image", "imageList.get", "unknown_function.select", "ee.Image", "imageList.get"], "external_vars": ["imageList", "ee"], "defined_vars": ["img_2015", "img_2017", "img_2018", "img_2019", "img_2016"], "parameters": [0, 1, 2, 3, 4, "['discrete_classification']", "['discrete_2015']", "imageList.get(0)", "['discrete_classification']", "['discrete_2016']", "imageList.get(1)", "['discrete_classification']", "['discrete_2017']", "imageList.get(2)", "['discrete_classification']", "['discrete_2018']", "imageList.get(3)", "['discrete_classification']", "['discrete_2019']", "imageList.get(4)"], "libraries": ["import geemap", "import ee"]}
{"code": "#1.4 combine the yearly maps to one multi-band image \nnewimage = img_2015.addBands([img_2016,img_2017,img_2018,img_2019])\nprint(newimage,\"new water image\")\n", "task": "Define a new variable named \"newimage\" by adding the bands of images \"img_2016\", \"img_2017\", \"img_2018\", and \"img_2019\" to the image \"img_2015\". Then, use the \"print\" function to display the \"newimage\" along with the text \"new water image\".", "exec_path": "GEE", "context": "import geemap\nimport ee\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n# /1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename\nimg_2015 = ee.Image(imageList.get(0)).select(\n    ['discrete_classification'], ['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(\n    ['discrete_classification'], ['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(\n    ['discrete_classification'], ['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(\n    ['discrete_classification'], ['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(\n    ['discrete_classification'], ['discrete_2019'])\n", "functions": ["img_2015.addBands", "print"], "external_vars": ["img_2015", "img_2017", "img_2018", "img_2019", "img_2016", "print"], "defined_vars": ["newimage"], "parameters": ["newimage", "new water image", "[img_2016, img_2017, img_2018, img_2019]"], "libraries": ["import geemap", "import ee"]}
{"code": "#2.1 extract water class from the discrete map: water have a value of 80\nwater = newimage.where(newimage.eq(80),1)\nwater = water.where(water.neq(1),0)\nMap.addLayer(water,{'bands': ['discrete_2015'],min: 0, max: 1, 'palette': ['FFFFFF', '#0046c8']} , 'discrete_2015')\nMap.addLayer(water,{'bands': ['discrete_2019'],min: 0, max: 1, 'palette': ['FFFFFF', '#0046c8']}, 'discrete_2019')\n", "task": "Define a variable named `water` using the `newimage` variable.  Set any pixel values in `newimage` that are equal to 80 to 1, and all other pixel values to 0. Then, use the `Map.addLayer` function to add this layer to the map twice, once for the `discrete_2015` and once for the `discrete_2019` bands. Use `min`, `max`, and `palette` parameters to set the layer visualization properties.", "exec_path": "GEE", "context": "import geemap\nimport ee\nMap = geemap.Map()\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n# /1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename\nimg_2015 = ee.Image(imageList.get(0)).select(\n    ['discrete_classification'], ['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(\n    ['discrete_classification'], ['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(\n    ['discrete_classification'], ['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(\n    ['discrete_classification'], ['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(\n    ['discrete_classification'], ['discrete_2019'])\n# 1.4 combine the yearly maps to one multi-band image\nnewimage = img_2015.addBands([img_2016, img_2017, img_2018, img_2019])\n", "functions": ["newimage.where", "newimage.eq", "water.where", "water.neq", "Map.addLayer", "Map.addLayer"], "external_vars": ["min", "newimage", "max", "Map"], "defined_vars": ["water"], "parameters": [1, 80, 0, 1, "water", "discrete_2015", "water", "discrete_2019", "newimage.eq(80)", "water.neq(1)", "{'bands': ['discrete_2015'], min: 0, max: 1, 'palette': ['FFFFFF', '#0046c8']}", "{'bands': ['discrete_2019'], min: 0, max: 1, 'palette': ['FFFFFF', '#0046c8']}"], "libraries": ["import geemap", "import ee"]}
{"code": "#2.2 water occurace map \noccurrence = water.select('discrete_2015').add(water.select('discrete_2016')).add(water.select('discrete_2017')) .add(water.select('discrete_2018')) .add(water.select('discrete_2019'))\nvis_occurence = {min:0, max:5,'palette':['#FFFFFF','#FFFF00', '#FF9900', '#66FF00','9900CC','#0066CC']};\nMap.addLayer(occurrence, vis_occurence, 'water occurence')\n# zoom to several interesting locations regarding to surface water change.\nMap.setCenter(36,-7, 9) # Mtera Reservoir in Tanzania\n", "task": "Define two variables, `occurrence` and `vis_occurence`. Calculate the occurrence of water by adding together water data from years 2015 to 2019. Then, define `vis_occurence` with a minimum value of `min`, a maximum value of `max`, and a color palette. Finally, add the `occurrence` layer to the `Map` with the defined `vis_occurence` and label it as \"water occurence\". Center the `Map` at longitude 36 and latitude -7 with a zoom level of 9.", "exec_path": "GEE", "context": "import geemap\nimport ee\nMap = geemap.Map()\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n# /1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename\nimg_2015 = ee.Image(imageList.get(0)).select(\n    ['discrete_classification'], ['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(\n    ['discrete_classification'], ['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(\n    ['discrete_classification'], ['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(\n    ['discrete_classification'], ['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(\n    ['discrete_classification'], ['discrete_2019'])\n# 1.4 combine the yearly maps to one multi-band image\nnewimage = img_2015.addBands([img_2016, img_2017, img_2018, img_2019])\n# 2.1 extract water class from the discrete map: water have a value of 80\nwater = newimage.where(newimage.eq(80), 1)\nwater = water.where(water.neq(1), 0)\n", "functions": ["unknown_function.add", "unknown_function.add", "unknown_function.add", "unknown_function.add", "water.select", "water.select", "water.select", "water.select", "water.select", "Map.addLayer", "Map.setCenter"], "external_vars": ["water", "min", "max", "Map"], "defined_vars": ["vis_occurence", "occurrence"], "parameters": ["discrete_2015", "discrete_2016", "discrete_2017", "discrete_2018", "discrete_2019", "occurrence", "vis_occurence", "water occurence", 36, 9, "water.select('discrete_2019')", "water.select('discrete_2018')", "water.select('discrete_2017')", "water.select('discrete_2016')", "-7"], "libraries": ["import geemap", "import ee"]}
{"code": "#2.3 quantify water change (water loss and water gain) \n# calculate the water loss and water gain between two years, e.g. 2015 and 2019\ndiff = water.select('discrete_2019').subtract(water.select('discrete_2015'))\nMap.addLayer(diff, {min:-1, max:1, 'palette':['#c73100','#FFFFFF', '#00bcfa']}, 'water loss and water gain')\n# zoom to some water change hotspots: blue represents water gain and red water loss; \nMap.setCenter(56, 40, 5) # Caspian Sea\n", "task": "Define a variable named `diff` by subtracting the 'discrete_2015' band from the 'discrete_2019' band of the `water` image. Then, add the resulting `diff` image to the `Map` as a layer with a color palette ranging from red to blue, indicating water loss (red) and water gain (blue). Set the `min` and `max` values of the color scale to -1 and 1 respectively. Finally, center the map at coordinates (56, 40) with a zoom level of 5.", "exec_path": "GEE", "context": "import geemap\nimport ee\nMap = geemap.Map()\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n# /1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename\nimg_2015 = ee.Image(imageList.get(0)).select(\n    ['discrete_classification'], ['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(\n    ['discrete_classification'], ['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(\n    ['discrete_classification'], ['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(\n    ['discrete_classification'], ['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(\n    ['discrete_classification'], ['discrete_2019'])\n# 1.4 combine the yearly maps to one multi-band image\nnewimage = img_2015.addBands([img_2016, img_2017, img_2018, img_2019])\n# 2.1 extract water class from the discrete map: water have a value of 80\nwater = newimage.where(newimage.eq(80), 1)\nwater = water.where(water.neq(1), 0)\n", "functions": ["unknown_function.subtract", "water.select", "water.select", "Map.addLayer", "Map.setCenter"], "external_vars": ["water", "min", "max", "Map"], "defined_vars": ["diff"], "parameters": ["discrete_2019", "discrete_2015", "diff", "water loss and water gain", 56, 40, 5, "water.select('discrete_2015')", "{min: -1, max: 1, 'palette': ['#c73100', '#FFFFFF', '#00bcfa']}"], "libraries": ["import geemap", "import ee"]}
{"code": "# Get the water loss and water gain image\nwaterLoss = diff.where(diff.neq(-1),0)\nwaterLoss = waterLoss.where(waterLoss.eq(-1),1)\nwaterGain = diff.where(diff.neq(1),0)\n", "task": "Given a variable `diff`, define two new variables: `waterLoss` and `waterGain`. `waterLoss` should be 1 if `diff` is -1 and 0 otherwise. `waterGain` should be 1 if `diff` is 1 and 0 otherwise.", "exec_path": "GEE", "context": "import geemap\nimport ee\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n# /1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename\nimg_2015 = ee.Image(imageList.get(0)).select(\n    ['discrete_classification'], ['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(\n    ['discrete_classification'], ['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(\n    ['discrete_classification'], ['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(\n    ['discrete_classification'], ['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(\n    ['discrete_classification'], ['discrete_2019'])\n# 1.4 combine the yearly maps to one multi-band image\nnewimage = img_2015.addBands([img_2016, img_2017, img_2018, img_2019])\n# 2.1 extract water class from the discrete map: water have a value of 80\nwater = newimage.where(newimage.eq(80), 1)\nwater = water.where(water.neq(1), 0)\n# calculate the water loss and water gain between two years, e.g. 2015 and 2019\ndiff = water.select('discrete_2019').subtract(water.select('discrete_2015'))\n", "functions": ["diff.where", "diff.neq", "waterLoss.where", "waterLoss.eq", "diff.where", "diff.neq"], "external_vars": ["diff"], "defined_vars": ["waterGain", "waterLoss"], "parameters": [0, 1, 0, 1, "diff.neq(-1)", "-1", "waterLoss.eq(-1)", "-1", "diff.neq(1)"], "libraries": ["import geemap", "import ee"]}
{"code": "# quantify water loss and water gain in a region of interest, e.g. Spain\n# Load country features from Large Scale International Boundary (LSIB) dataset.\ncountries = ee.FeatureCollection('USDOS/LSIB_SIMPLE/2017')\nSpain= countries.filter(ee.Filter.eq('country_na', 'Spain'))\n# Sum the values of water loss pixels in Spain.\nstats_waterGain = waterGain.reduceRegion(\n  reducer=ee.Reducer.sum(),\n  geometry=Spain,\n  scale=100,\n  maxPixels=1e16\n)\nstats_waterLoss = waterLoss.reduceRegion(\n  reducer=ee.Reducer.sum(),\n  geometry=Spain,\n  scale=100,\n  maxPixels=1e16\n)\nprint('pixels representing loss: ',stats_waterLoss)\nprint('pixels representing gain: ',stats_waterGain)\n\n\n", "task": "Using the Earth Engine library **ee**, get a FeatureCollection of countries from the USDOS/LSIB_SIMPLE/2017 dataset and filter it to get a FeatureCollection representing Spain. Calculate the sum of pixels representing water gain and loss in Spain using the **waterGain** and **waterLoss** variables. Print the results using the **print** function. Define the variables **Spain**, **stats_waterLoss**, **countries**, and **stats_waterGain**. ", "exec_path": "GEE", "context": "import geemap\nimport ee\n# 1.1 Load CGLS-LC100 yearly (2015-2019) maps\nCGLSCollection = ee.ImageCollection(\n    'COPERNICUS/Landcover/100m/Proba-V-C3/Global')\n# 1.2 Get the ID of each image object (element).\nimageList = CGLSCollection.toList(5)\n# /1.3 Obtain the yearly (2015-2019) discrecte land cover maps and rename\nimg_2015 = ee.Image(imageList.get(0)).select(\n    ['discrete_classification'], ['discrete_2015'])\nimg_2016 = ee.Image(imageList.get(1)).select(\n    ['discrete_classification'], ['discrete_2016'])\nimg_2017 = ee.Image(imageList.get(2)).select(\n    ['discrete_classification'], ['discrete_2017'])\nimg_2018 = ee.Image(imageList.get(3)).select(\n    ['discrete_classification'], ['discrete_2018'])\nimg_2019 = ee.Image(imageList.get(4)).select(\n    ['discrete_classification'], ['discrete_2019'])\n# 1.4 combine the yearly maps to one multi-band image\nnewimage = img_2015.addBands([img_2016, img_2017, img_2018, img_2019])\n# 2.1 extract water class from the discrete map: water have a value of 80\nwater = newimage.where(newimage.eq(80), 1)\nwater = water.where(water.neq(1), 0)\n# calculate the water loss and water gain between two years, e.g. 2015 and 2019\ndiff = water.select('discrete_2019').subtract(water.select('discrete_2015'))\n# Get the water loss and water gain image\nwaterLoss = diff.where(diff.neq(-1), 0)\nwaterLoss = waterLoss.where(waterLoss.eq(-1), 1)\nwaterGain = diff.where(diff.neq(1), 0)\n", "functions": ["ee.FeatureCollection", "countries.filter", "ee.Filter.eq", "waterGain.reduceRegion", "ee.Reducer.sum", "waterLoss.reduceRegion", "ee.Reducer.sum", "print", "print"], "external_vars": ["waterGain", "waterLoss", "print", "ee"], "defined_vars": ["Spain", "stats_waterGain", "stats_waterLoss", "countries"], "parameters": ["USDOS/LSIB_SIMPLE/2017", "country_na", "Spain", "pixels representing loss: ", "stats_waterLoss", "pixels representing gain: ", "stats_waterGain", "ee.Filter.eq('country_na', 'Spain')"], "libraries": ["import geemap", "import ee"]}
