{"code": "import ee\nee.Initialize()\nimport geemap\nMap = geemap.Map()\n", "task": "Import the Earth Engine library (`ee`) and initialize it. Then, import the `geemap` library and define a variable named `Map` using the `geemap.Map()` function.", "exec_path": "GEE", "context": "", "functions": ["ee.Initialize", "geemap.Map"], "external_vars": ["geemap", "ee"], "defined_vars": ["Map"], "parameters": [], "libraries": ["import geemap", "import ee"]}
{"code": "# Load the SRTM elevation dataset.\nsrtm = ee.Image(\"USGS/SRTMGL1_003\")\n", "task": "Using the Earth Engine library (`ee`), load the SRTMGL1_003 image collection and assign it to the variable `srtm`.", "exec_path": "GEE", "context": "import geemap\nimport ee\n", "functions": ["ee.Image"], "external_vars": ["ee"], "defined_vars": ["srtm"], "parameters": ["USGS/SRTMGL1_003"], "libraries": ["import geemap", "import ee"]}
{"code": "# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\"users/soneruereyen/NaturalEarth_country_boundaries\")\n", "task": "Using the Earth Engine library (ee), import the Natural Earth country boundaries feature collection and assign it to the variable \"countries\".", "exec_path": "GEE", "context": "import geemap\nimport ee\n", "functions": ["ee.FeatureCollection"], "external_vars": ["ee"], "defined_vars": ["countries"], "parameters": ["users/soneruereyen/NaturalEarth_country_boundaries"], "libraries": ["import geemap", "import ee"]}
{"code": "# Define the country of interest.\ncountry_name = 'Uzbekistan'\ncountry = countries.filterMetadata('NAME', 'Contains', country_name)\n", "task": "Define a variable called `country_name` and assign it the string \"Uzbekistan\". Then, use the `countries` variable (which is assumed to be an object with a `filterMetadata` method) to filter for countries whose name contains the value of `country_name`, and assign the resulting filtered data to a variable called `country`.", "exec_path": "GEE", "context": "import geemap\nimport ee\n# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\n    'users/soneruereyen/NaturalEarth_country_boundaries')\n", "functions": ["countries.filterMetadata"], "external_vars": ["countries"], "defined_vars": ["country", "country_name"], "parameters": ["NAME", "Contains", "country_name"], "libraries": ["import geemap", "import ee"]}
{"code": "# Add the country boundaries to the map.\nMap.addLayer(countries)\nMap.addLayer(country, {'color': 'red'}, 'Uzbekistan')\n", "task": "Add the layer \"countries\" to the map. Then, add the layer \"country\" to the map, setting its color to red and placing it under the layer named \"Uzbekistan\".", "exec_path": "GEE", "context": "import geemap\nimport ee\nMap = geemap.Map()\n# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\n    'users/soneruereyen/NaturalEarth_country_boundaries')\n# Define the country of interest.\ncountry_name = 'Uzbekistan'\ncountry = countries.filterMetadata('NAME', 'Contains', country_name)\n", "functions": ["Map.addLayer", "Map.addLayer"], "external_vars": ["country", "Map", "countries"], "defined_vars": [], "parameters": ["countries", "country", "Uzbekistan", "{'color': 'red'}"], "libraries": ["import geemap", "import ee"]}
{"code": "# Calculate the mean elevation for the country.\nelevation_country = srtm.reduceRegion(\n    reducer=ee.Reducer.mean(),\n    geometry=country,\n    scale=300  # Scale in meters\n)\n", "task": "Calculate the average elevation of a country using the SRTM elevation dataset. Define a variable `elevation_country` to store the result.", "exec_path": "GEE", "context": "import geemap\nimport ee\n# Load the SRTM elevation dataset.\nsrtm = ee.Image('USGS/SRTMGL1_003')\n# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\n    'users/soneruereyen/NaturalEarth_country_boundaries')\n# Define the country of interest.\ncountry_name = 'Uzbekistan'\ncountry = countries.filterMetadata('NAME', 'Contains', country_name)\n", "functions": ["srtm.reduceRegion", "ee.Reducer.mean"], "external_vars": ["srtm", "country", "ee"], "defined_vars": ["elevation_country"], "parameters": [], "libraries": ["import geemap", "import ee"]}
{"code": "# Print the mean elevation.\nprint('Mean elevation of {}: {}'.format(country_name, elevation_country.get('elevation')))\n", "task": "Print the mean elevation of a country.  Use the variables `country_name` and `elevation_country` to access the country name and its elevation data.  You will need to define the variables `country_name` and `elevation_country` before running this code.", "exec_path": "GEE", "context": "import geemap\nimport ee\n# Load the SRTM elevation dataset.\nsrtm = ee.Image('USGS/SRTMGL1_003')\n# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\n    'users/soneruereyen/NaturalEarth_country_boundaries')\n# Define the country of interest.\ncountry_name = 'Uzbekistan'\ncountry = countries.filterMetadata('NAME', 'Contains', country_name)\n# Calculate the mean elevation for the country.\nelevation_country = srtm.reduceRegion(\n    reducer=ee.Reducer.mean(), geometry=country, scale=300)\n", "functions": ["print", "unknown_function.format", "elevation_country.get"], "external_vars": ["country_name", "elevation_country", "print"], "defined_vars": [], "parameters": ["country_name", "elevation", "'Mean elevation of {}: {}'.format(country_name, elevation_country.get('elevation'))", "elevation_country.get('elevation')"], "libraries": ["import geemap", "import ee"]}
{"code": "# Calculate the mean slope for the country.\nslope = ee.Terrain.slope(srtm)\nslope_country = slope.reduceRegion(\n    reducer=ee.Reducer.mean(),\n    geometry=country,\n    scale=300  # Scale in meters\n)\n", "task": "Using the Earth Engine library (ee), calculate the mean slope of the SRTM elevation data (srtm) within the country geometry. Define the variables `slope` to store the calculated slope and `slope_country` to store the mean slope within the country.", "exec_path": "GEE", "context": "import geemap\nimport ee\n# Load the SRTM elevation dataset.\nsrtm = ee.Image('USGS/SRTMGL1_003')\n# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\n    'users/soneruereyen/NaturalEarth_country_boundaries')\n# Define the country of interest.\ncountry_name = 'Uzbekistan'\ncountry = countries.filterMetadata('NAME', 'Contains', country_name)\n", "functions": ["ee.Terrain.slope", "slope.reduceRegion", "ee.Reducer.mean"], "external_vars": ["srtm", "country", "ee"], "defined_vars": ["slope_country", "slope"], "parameters": ["srtm"], "libraries": ["import geemap", "import ee"]}
{"code": "# Print the mean slope.\nprint('Mean slope of {}: {}'.format(country_name, slope_country.get('slope')))\n\n\n", "task": "Print the mean slope of a country. Use the variable `country_name` to specify the country and `slope_country` to retrieve the slope value. Make sure `country_name` and `slope_country` are defined.", "exec_path": "GEE", "context": "import geemap\nimport ee\n# Load the SRTM elevation dataset.\nsrtm = ee.Image('USGS/SRTMGL1_003')\n# Load the Natural Earth country boundaries dataset.\ncountries = ee.FeatureCollection(\n    'users/soneruereyen/NaturalEarth_country_boundaries')\n# Define the country of interest.\ncountry_name = 'Uzbekistan'\ncountry = countries.filterMetadata('NAME', 'Contains', country_name)\n# Calculate the mean slope for the country.\nslope = ee.Terrain.slope(srtm)\nslope_country = slope.reduceRegion(\n    reducer=ee.Reducer.mean(), geometry=country, scale=300)\n", "functions": ["print", "unknown_function.format", "slope_country.get"], "external_vars": ["slope_country", "country_name", "print"], "defined_vars": [], "parameters": ["country_name", "slope", "'Mean slope of {}: {}'.format(country_name, slope_country.get('slope'))", "slope_country.get('slope')"], "libraries": ["import geemap", "import ee"]}
