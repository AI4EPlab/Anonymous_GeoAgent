{"code": "\n# sphinx_gallery_thumbnail_number = 2\nimport geoutils as gu\nfilename_rast = gu.examples.get_path(\"everest_landsat_b4\")\nfilename_vect = gu.examples.get_path(\"everest_rgi_outlines\")\nrast = gu.Raster(filename_rast)\nvect = gu.Vector(filename_vect)\nvect = vect[vect[\"RGIId\"] == \"RGI60-15.10055\"]\n", "task": "Using the geoutils library (`gu`), load a raster and vector dataset, filtering the vector by RGIId. Define the following variables: `filename_rast`, `filename_vect`, `rast`, `vect`.", "exec_path": "geoutils-main", "context": "", "functions": ["gu.examples.get_path", "gu.examples.get_path", "gu.Raster", "gu.Vector"], "external_vars": ["gu"], "defined_vars": ["filename_vect", "filename_rast", "rast", "vect"], "parameters": ["everest_landsat_b4", "everest_rgi_outlines", "filename_rast", "filename_vect"], "libraries": ["import geoutils as gu"]}
{"code": "\n# The first raster has larger extent and higher resolution than the vector.\nrast.info()\nprint(vect.bounds)\n", "task": "Print the information about the raster dataset `rast` and the bounding box of the vector dataset `vect`. You will need to define the variables `rast` and `vect` before running this code.", "exec_path": "geoutils-main", "context": "import geoutils as gu\n# sphinx_gallery_thumbnail_number = 2\nfilename_rast = gu.examples.get_path('everest_landsat_b4')\nfilename_vect = gu.examples.get_path('everest_rgi_outlines')\nrast = gu.Raster(filename_rast)\nvect = gu.Vector(filename_vect)\nvect = vect[vect['RGIId'] == 'RGI60-15.10055']\n", "functions": ["rast.info", "print"], "external_vars": ["vect", "rast", "print"], "defined_vars": [], "parameters": ["vect.bounds"], "libraries": ["import geoutils as gu"]}
{"code": "\n# Let's plot the raster and vector.\nrast.plot(cmap=\"Purples\")\nvect.plot(ref_crs=rast, fc=\"none\", ec=\"k\", lw=2)\n", "task": "Plot the raster layer `rast` using the \"Purples\" colormap and overlay the vector layer `vect` on top of it. The vector layer should have no fill (`fc='none'`), black edges (`ec='k'`), and a line width of 2 pixels (`lw=2`). Make sure the vector layer is plotted with the same coordinate reference system as the raster layer (`ref_crs=rast`).", "exec_path": "geoutils-main", "context": "import geoutils as gu\n# sphinx_gallery_thumbnail_number = 2\nfilename_rast = gu.examples.get_path('everest_landsat_b4')\nfilename_vect = gu.examples.get_path('everest_rgi_outlines')\nrast = gu.Raster(filename_rast)\nvect = gu.Vector(filename_vect)\nvect = vect[vect['RGIId'] == 'RGI60-15.10055']\n", "functions": ["rast.plot", "vect.plot"], "external_vars": ["vect", "rast"], "defined_vars": [], "parameters": [], "libraries": ["import geoutils as gu"]}
{"code": "\nrast.crop(vect, inplace=True)\n", "task": "Crop the raster `rast` to the extent defined by the vector geometry `vect`. Modify the raster in-place.", "exec_path": "geoutils-main", "context": "import geoutils as gu\n# sphinx_gallery_thumbnail_number = 2\nfilename_rast = gu.examples.get_path('everest_landsat_b4')\nfilename_vect = gu.examples.get_path('everest_rgi_outlines')\nrast = gu.Raster(filename_rast)\nvect = gu.Vector(filename_vect)\nvect = vect[vect['RGIId'] == 'RGI60-15.10055']\n", "functions": ["rast.crop"], "external_vars": ["vect", "rast"], "defined_vars": [], "parameters": ["vect"], "libraries": ["import geoutils as gu"]}
{"code": "\nrast.plot(ax=\"new\", cmap=\"Purples\")\nvect.plot(ref_crs=rast, fc=\"none\", ec=\"k\", lw=2)\n", "task": "Plot the raster data `rast` with a \"Purples\" colormap in a new axes. Then, plot the vector data `vect` on the same axes, referencing the raster's coordinate system. Set the vector fill color to `'none'`, edge color to `'k'` (black), and linewidth to 2.", "exec_path": "geoutils-main", "context": "import geoutils as gu\n# sphinx_gallery_thumbnail_number = 2\nfilename_rast = gu.examples.get_path('everest_landsat_b4')\nfilename_vect = gu.examples.get_path('everest_rgi_outlines')\nrast = gu.Raster(filename_rast)\nvect = gu.Vector(filename_vect)\nvect = vect[vect['RGIId'] == 'RGI60-15.10055']\n", "functions": ["rast.plot", "vect.plot"], "external_vars": ["vect", "rast"], "defined_vars": [], "parameters": [], "libraries": ["import geoutils as gu"]}
{"code": "\nrast.crop((rast.bounds.left + 1000, rast.bounds.bottom, rast.bounds.right, rast.bounds.top - 500), inplace=True)\nrast.plot(ax=\"new\", cmap=\"Purples\")\nvect.plot(ref_crs=rast, fc=\"none\", ec=\"k\", lw=2)\n\n\n", "task": "Crop the raster `rast` by 1000 units to the right and 500 units from the top, then plot it with a Purples colormap. Overlay the vector layer `vect` on top of the raster with black outlines and no fill.", "exec_path": "geoutils-main", "context": "import geoutils as gu\n# sphinx_gallery_thumbnail_number = 2\nfilename_rast = gu.examples.get_path('everest_landsat_b4')\nfilename_vect = gu.examples.get_path('everest_rgi_outlines')\nrast = gu.Raster(filename_rast)\nvect = gu.Vector(filename_vect)\nvect = vect[vect['RGIId'] == 'RGI60-15.10055']\n", "functions": ["rast.crop", "rast.plot", "vect.plot"], "external_vars": ["vect", "rast"], "defined_vars": [], "parameters": ["(rast.bounds.left + 1000, rast.bounds.bottom, rast.bounds.right, rast.bounds.top - 500)"], "libraries": ["import geoutils as gu"]}
