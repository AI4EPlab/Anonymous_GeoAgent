{"code": "\nimport matplotlib.pyplot as plt\nimport geopandas\nfrom shapely.geometry import box\nimport geodatasets\n", "task": "Import the necessary libraries for plotting and working with geospatial data. The following variables will be defined later: [**city**, **country**, **polygon**].", "exec_path": "geopandas-main", "context": "", "functions": [], "external_vars": [], "defined_vars": [], "parameters": [], "libraries": ["import geopandas", "import matplotlib.pyplot as plt", "import geodatasets", "from shapely.geometry import box"]}
{"code": "\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path(\"geoda.chicago_commpop\"))\ngroceries = geopandas.read_file(geodatasets.get_path(\"geoda.groceries\")).to_crs(chicago.crs)\n", "task": "Using the `geopandas` and `geodatasets` libraries, read the Chicago community population data from the \"geoda.chicago_commpop\" file and assign it to the variable `chicago`. Then, read the grocery store data from the \"geoda.groceries\" file, convert it to the same coordinate reference system as `chicago`, and assign it to the variable `groceries`.", "exec_path": "geopandas-main", "context": "import geopandas\nimport geodatasets\n", "functions": ["geopandas.read_file", "geodatasets.get_path", "unknown_function.to_crs", "geopandas.read_file", "geodatasets.get_path"], "external_vars": ["geodatasets", "geopandas"], "defined_vars": ["chicago", "groceries"], "parameters": ["geoda.chicago_commpop", "geoda.groceries", "geodatasets.get_path('geoda.chicago_commpop')", "chicago.crs", "geodatasets.get_path('geoda.groceries')"], "libraries": ["import geopandas", "import geodatasets"]}
{"code": "\n# Create a subset of the chicago data that is just the South American continent\nnear_west_side = chicago[chicago[\"community\"] == \"NEAR WEST SIDE\"]\n", "task": "From the DataFrame `chicago`, create a new DataFrame called `near_west_side` containing only rows where the \"community\" column is equal to \"NEAR WEST SIDE\".", "exec_path": "geopandas-main", "context": "import geopandas\nimport geodatasets\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\n", "functions": [], "external_vars": ["chicago"], "defined_vars": ["near_west_side"], "parameters": [], "libraries": ["import geopandas", "import geodatasets"]}
{"code": "\n# Create a custom polygon\npolygon = box(-87.8, 41.90, -87.5, 42)\npoly_gdf = geopandas.GeoDataFrame([1], geometry=[polygon], crs=chicago.crs)\n", "task": "Using the `box` function, create a polygon with coordinates (-87.8, 41.9) and (-87.5, 42). Store the polygon in a variable called `polygon`.  Then, using the `geopandas.GeoDataFrame` function, create a GeoDataFrame called `poly_gdf` with a single row (containing the value 1) and the `polygon` as its geometry. Set the coordinate reference system (crs) of the GeoDataFrame to the `chicago.crs` object. ", "exec_path": "geopandas-main", "context": "import geopandas\nimport geodatasets\nfrom shapely.geometry import box\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\n", "functions": ["box", "geopandas.GeoDataFrame"], "external_vars": ["box", "chicago", "geopandas"], "defined_vars": ["poly_gdf", "polygon"], "parameters": [41.9, 42, "-87.8", "-87.5", "[1]"], "libraries": ["import geopandas", "import geodatasets", "from shapely.geometry import box"]}
{"code": "\n# Plot the Unclipped Data\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))\nchicago.plot(ax=ax1)\npoly_gdf.boundary.plot(ax=ax1, color=\"red\")\nnear_west_side.boundary.plot(ax=ax2, color=\"green\")\ngroceries.plot(ax=ax2, color=\"purple\")\nax1.set_title(\"All Unclipped Chicago Communities\", fontsize=20)\nax2.set_title(\"All Unclipped Groceries\", fontsize=20)\nax1.set_axis_off()\nax2.set_axis_off()\nplt.show()\n", "task": "Create a two-panel plot using `plt.subplots`. In the top panel, plot the Chicago community areas (`chicago`) and the boundary of the polygon (`poly_gdf`) in red. In the bottom panel, plot the boundary of the Near West Side (`near_west_side`) in green and the grocery store locations (`groceries`) in purple. Set titles for both panels and turn off the axes. Define the following variables: `fig`, `ax1`, and `ax2`.", "exec_path": "geopandas-main", "context": "import geopandas\nimport matplotlib.pyplot as plt\nimport geodatasets\nfrom shapely.geometry import box\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\ngroceries = geopandas.read_file(geodatasets.get_path(\n    'geoda.groceries')).to_crs(chicago.crs)\n# Create a subset of the chicago data that is just the South American continent\nnear_west_side = chicago[chicago['community'] == 'NEAR WEST SIDE']\n# Create a custom polygon\npolygon = box(-87.8, 41.9, -87.5, 42)\npoly_gdf = geopandas.GeoDataFrame([1], geometry=[polygon], crs=chicago.crs)\n", "functions": ["plt.subplots", "chicago.plot", "poly_gdf.boundary.plot", "near_west_side.boundary.plot", "groceries.plot", "ax1.set_title", "ax2.set_title", "ax1.set_axis_off", "ax2.set_axis_off", "plt.show"], "external_vars": ["groceries", "near_west_side", "poly_gdf", "chicago", "plt"], "defined_vars": ["ax2", "fig", "ax1"], "parameters": [2, 1, "All Unclipped Chicago Communities", "All Unclipped Groceries"], "libraries": ["import geopandas", "import matplotlib.pyplot as plt", "import geodatasets", "from shapely.geometry import box"]}
{"code": "\n# Clip the Data\nchicago_clipped = chicago.clip(polygon)\n", "task": "Clip the GeoDataFrame `chicago` using the polygon `polygon` and store the result in a new GeoDataFrame named `chicago_clipped`.", "exec_path": "geopandas-main", "context": "import geopandas\nimport geodatasets\nfrom shapely.geometry import box\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\n# Create a custom polygon\npolygon = box(-87.8, 41.9, -87.5, 42)\n", "functions": ["chicago.clip"], "external_vars": ["chicago", "polygon"], "defined_vars": ["chicago_clipped"], "parameters": ["polygon"], "libraries": ["import geopandas", "import geodatasets", "from shapely.geometry import box"]}
{"code": "\n# Plot the clipped data\n# The plot below shows the results of the clip function applied to the chicago\n# sphinx_gallery_thumbnail_number = 2\nfig, ax = plt.subplots(figsize=(12, 8))\nchicago_clipped.plot(ax=ax, color=\"purple\")\nchicago.boundary.plot(ax=ax)\npoly_gdf.boundary.plot(ax=ax, color=\"red\")\nax.set_title(\"Chicago Clipped\", fontsize=20)\nax.set_axis_off()\nplt.show()\n\n#\n", "task": "Using the provided libraries, plot the boundary of Chicago in black, the boundary of the clipped Chicago region in purple, and the boundary of the `poly_gdf` in red. Make sure to set the title of the plot to \"Chicago Clipped\" and turn off the axis. Define the variables `ax` and `fig` to plot the results. ", "exec_path": "geopandas-main", "context": "import geopandas\nimport matplotlib.pyplot as plt\nimport geodatasets\nfrom shapely.geometry import box\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\n# Create a custom polygon\npolygon = box(-87.8, 41.9, -87.5, 42)\npoly_gdf = geopandas.GeoDataFrame([1], geometry=[polygon], crs=chicago.crs)\n# Plot the Unclipped Data\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))\n# Clip the Data\nchicago_clipped = chicago.clip(polygon)\n", "functions": ["plt.subplots", "chicago_clipped.plot", "chicago.boundary.plot", "poly_gdf.boundary.plot", "ax.set_title", "ax.set_axis_off", "plt.show"], "external_vars": ["chicago_clipped", "chicago", "poly_gdf", "plt"], "defined_vars": ["ax", "fig"], "parameters": ["Chicago Clipped"], "libraries": ["import geopandas", "import matplotlib.pyplot as plt", "import geodatasets", "from shapely.geometry import box"]}
{"code": "\ngroceries_clipped = groceries.clip(near_west_side)\n", "task": "Define a new variable called `groceries_clipped` by clipping the `groceries` data to the area defined by `near_west_side`.", "exec_path": "geopandas-main", "context": "import geopandas\nimport geodatasets\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\ngroceries = geopandas.read_file(geodatasets.get_path(\n    'geoda.groceries')).to_crs(chicago.crs)\n# Create a subset of the chicago data that is just the South American continent\nnear_west_side = chicago[chicago['community'] == 'NEAR WEST SIDE']\n", "functions": ["groceries.clip"], "external_vars": ["groceries", "near_west_side"], "defined_vars": ["groceries_clipped"], "parameters": ["near_west_side"], "libraries": ["import geopandas", "import geodatasets"]}
{"code": "\n# Plot the clipped data\n# The plot below shows the results of the clip function applied to the capital cities\nfig, ax = plt.subplots(figsize=(12, 8))\ngroceries_clipped.plot(ax=ax, color=\"purple\")\nnear_west_side.boundary.plot(ax=ax, color=\"green\")\nax.set_title(\"Groceries Clipped\", fontsize=20)\nax.set_axis_off()\nplt.show()\n\n\n", "task": "Using the matplotlib library (`plt`), create a plot that shows the `groceries_clipped` data in purple and the boundary of `near_west_side` in green. Set the title to \"Groceries Clipped\" with a font size of 20. Turn off the axes and display the plot. This will require defining variables named `fig` and `ax`.", "exec_path": "geopandas-main", "context": "import geopandas\nimport matplotlib.pyplot as plt\nimport geodatasets\n# Get or Create Example Data\nchicago = geopandas.read_file(geodatasets.get_path('geoda.chicago_commpop'))\ngroceries = geopandas.read_file(geodatasets.get_path(\n    'geoda.groceries')).to_crs(chicago.crs)\n# Create a subset of the chicago data that is just the South American continent\nnear_west_side = chicago[chicago['community'] == 'NEAR WEST SIDE']\n# Plot the Unclipped Data\nfig, (ax1, ax2) = plt.subplots(2, 1, figsize=(12, 8))\ngroceries_clipped = groceries.clip(near_west_side)\n", "functions": ["plt.subplots", "groceries_clipped.plot", "near_west_side.boundary.plot", "ax.set_title", "ax.set_axis_off", "plt.show"], "external_vars": ["groceries_clipped", "plt", "near_west_side"], "defined_vars": ["ax", "fig"], "parameters": ["Groceries Clipped"], "libraries": ["import geopandas", "import matplotlib.pyplot as plt", "import geodatasets"]}
